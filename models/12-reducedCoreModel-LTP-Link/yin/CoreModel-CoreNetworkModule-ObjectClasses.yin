<?xml version="1.0" encoding="UTF-8"?>
<module name="CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="urn:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="urn:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:CoreModel-CoreNetworkModule-TypeDefinitions="urn:onf:CoreModel-CoreNetworkModule-TypeDefinitions">
  <namespace uri="urn:onf:CoreModel-CoreNetworkModule-ObjectClasses"/>
  <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="CoreModel-CoreNetworkModule-TypeDefinitions">
    <prefix value="CoreModel-CoreNetworkModule-TypeDefinitions"/>
  </import>
  <grouping name="ForwardingDomain">
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="layerProtocolNameList">
      <description>
        <text>One or more protocol layers at which the FD represents the opportunity to enable forwarding between LTP that bound it.</text>
      </description>
      <ordered-by value="system"/>
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <min-elements value="1"/>
    </leaf-list>
    <leaf-list name="lowerLevelFdRefList">
      <description>
        <text>The FD object class supports a recursive aggregation relationship (HigherLevelFdEncompassesLowerLevelFds) such that the internal construction of an FD can be exposed as multiple lower level FDs and associated Links (partitioning).
The aggregated FDs and Links form an interconnected topology that provides and describes the capability of the aggregating FD.
Note that the model actually represents aggregation of lower level FDs into higher level FDs as views rather than FD partition, and supports multiple views. 
Aggregation allow reallocation of capacity from lower level FDs to different higher level FDs as if the network is reorganized  (as the association is aggregation not composition).</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/fdRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="ltpRefList">
      <description>
        <text>An instance of FD is associated with zero or more LTP objects. 
The LTPs that bound the FD provide capacity for forwarding.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="linkRefList">
      <description>
        <text>The FD encompasses Links that interconnect lower level FDs and collect links that are wholly within the bounds of the FD.
See also _lowerLevelFdRefList.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/Link/uuid"/>
      </type>
    </leaf-list>
  </grouping>
  <list name="NetworkControlDomain">
    <key value="uuid"/>
    <status value="current"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="forwardingDomainRefList">
      <description>
        <text>The FDs accessible via the NCD.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/fdRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="linkRefList">
      <description>
        <text>The links accessible in the scope of the NCD. 
The domain is bounded by off-network links.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/Link/uuid"/>
      </type>
    </leaf-list>
    <list name="networkElementRefList">
      <description>
        <text>The network elements within the scope of the NCD where each NE is within one and only one domain.</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="NetworkElement"/>
    </list>
    <max-elements value="2"/>
    <min-elements value="1"/>
  </list>
  <list name="Link">
    <key value="uuid"/>
    <config value="true"/>
    <ordered-by value="system"/>
    <uses name="Link"/>
  </list>
  <grouping name="Link">
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="layerProtocolNameList">
      <description>
        <text>The Link can support multiple transport layer protocols via the associated LTP object. 
For implementation optimization, where appropriate, multiple layer-specific links can be merged and represented as a single Link instance as the Link can represent a list of layer protocols.
A link may support different layer protocols at each Port when it is a transitional link.</text>
      </description>
      <ordered-by value="system"/>
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <min-elements value="1"/>
    </leaf-list>
    <leaf-list name="fdRefList">
      <description>
        <text>The Link associates with two or more FDs. 
This association provides a direct summarization of the association via LinkPort and LTP.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/fdRefList/uuid"/>
      </type>
      <min-elements value="2"/>
    </leaf-list>
    <list name="linkPortList">
      <description>
        <text>The association of the Link to LTPs is made via LinkPort (essentially the ports of the Link).</text>
      </description>
      <key value="role"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="LinkPort"/>
      <min-elements value="2"/>
    </list>
    <leaf name="linkDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:ForwardingDirection"/>
      <description>
        <text>The directionality of the Link. 
Is applicable to simple Links where all LinkPorts are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). 
Is not present in more complex cases.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="NetworkElement">
    <status value="deprecated"/>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <list name="fdRefList">
      <description>
        <text>Represents the FD that is completely within the boundary of the NE.
At a low level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). 
Note that an NE can encompass multiple switch matrices (FDs) and the FD representing the switch matrix can be further partitioned.
Where an FD is referenced by the NeEncompassesFd association, any FDs that it encompasses (i.e., that are associated with it by HigherLevelFdEncompassesLowerLevelFds), must also be encompassed by the NE and hence must have the NeEncompassesFd association.
</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="ForwardingDomain"/>
    </list>
    <list name="ltpRefList">
      <description>
        <text>An NE has associated LTPs that are at its boundary.
The NeEncompassesFd association occurs for FDs that are within the bounds of the NetworkElement definition such that the FD is bounded by LTPs, all of which are on the boundary of the NetworkElement or are within the NetworkElement. 
An LTP can be independent of an NE.</text>
      </description>
      <key value="uuid"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="LogicalTerminationPoint"/>
    </list>
  </grouping>
  <grouping name="SdnController">
    <status value="current"/>
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
  </grouping>
  <grouping name="LayerProtocol">
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:LocalClass"/>
    <leaf name="layerProtocolName">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName"/>
      <description>
        <text>Indicate the specific layer-protocol described by the LayerProtocol entity.</text>
      </description>
    </leaf>
    <leaf name="configuredClientCapacity">
      <type name="string"/>
      <description>
        <text>Provides a summarized view of the client capacity that is configurable for use.
Note the cleint LTP association should provide all necessary detail hence this attribute is questionable.</text>
      </description>
    </leaf>
    <leaf name="lpDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection"/>
      <description>
        <text>The overall directionality of the LP. 
- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.
- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows
- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows</text>
      </description>
    </leaf>
    <leaf name="terminationState">
      <type name="boolean"/>
      <description>
        <text>Indicates whether the layer is terminated and if so how.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LogicalTerminationPoint">
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:GlobalClass"/>
    <leaf-list name="serverLtpRefList">
      <description>
        <text>References contained LTPs representing servers of this LTP in an inverse multiplexing configuration (e.g. VCAT).</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf-list name="clientLtpRefList">
      <description>
        <text>References contained LTPs representing client traffic of this LTP for normal cases of multiplexing.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
    </leaf-list>
    <list name="lpList">
      <description>
        <text>Ordered list of LayerProtocols that this LTP is comprised of where the first entry in the list is the lowest server layer (e.g. physical)</text>
      </description>
      <key value="layerProtocolName"/>
      <config value="true"/>
      <ordered-by value="system"/>
      <uses name="LayerProtocol"/>
      <min-elements value="1"/>
    </list>
    <leaf name="connectedLtpRef">
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
      <description>
        <text>Applicable in a simple context where two LTPs are associated via a non-adjustable enabled forwarding.
Reduces clutter removing the need for two additional LTPs and an FC with a pair of FcPorts.</text>
      </description>
    </leaf>
    <leaf name="peerLtpRef">
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
      <description>
        <text>References contained LTPs representing the reversal of orientation of flow where two LTPs are associated via a non-adjustable enabled forwarding and where the referenced LTP is fully dependent on the this LTP.</text>
      </description>
    </leaf>
    <leaf-list name="physicalPortReference">
      <description>
        <text>One or more text labels for the unmodelled physical port associated with the LTP.
In many cases there is no associated physical port</text>
      </description>
      <ordered-by value="system"/>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="ltpRefList">
      <description>
        <text>References one or more LTPs in other views that represent this LTP. 
The referencing LTP is the rovider of capability.</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf name="ltpDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection"/>
      <description>
        <text>The overall directionality of the LTP. 
- A BIDIRECTIONAL LTP must have at least some LPs that are BIDIRECTIONAL but may also have some SINK and/or SOURCE LPs.
- A SINK LTP can only contain SINK LPs
- A SOURCE LTP can only contain SOURCE LPs</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="LinkPort">
    <uses name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:LocalClass"/>
    <leaf-list name="ltpRefList">
      <description>
        <text>The LinkPort may be associated with more than one LTP when the LinkPort is bidirectional and the LTPs are unidirectional.
Multiple Ltp
- Bidirectional LinkPort to two Uni Ltps
Zero Ltp
- BreakBeforeMake transition
- Planned Ltp not yet in place
- Off-network LTP referenced through other mechanism</text>
      </description>
      <ordered-by value="system"/>
      <type name="leafref">
        <path value="/NetworkControlDomain/networkElementRefList/ltpRefList/uuid"/>
      </type>
    </leaf-list>
    <leaf name="role">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:PortRole"/>
      <description>
        <text>Each LinkPort of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. </text>
      </description>
    </leaf>
    <leaf name="offNetworkAddress">
      <type name="string"/>
      <description>
        <text>A freeform opportunity to express a reference for an Port of the Link that is not outside the scope of the control domain.
This attribute is expected to convey a foreign identifier/name/address or a shared reference for some mid-span point at the boundary between two administrative domains.
This attribute is used when an LTP cannot be referenced.</text>
      </description>
    </leaf>
    <leaf name="linkPortDirection">
      <type name="CoreModel-CoreNetworkModule-TypeDefinitions:PortDirection"/>
      <description>
        <text>The orientation of defined flow at the LinkPort.</text>
      </description>
    </leaf>
  </grouping>
</module>
